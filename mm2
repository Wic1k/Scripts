local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local plr = Players.LocalPlayer
local character = plr.Character or plr.CharacterAdded:Wait()
local humPart = character:WaitForChild("HumanoidRootPart")
local visited = {}

plr.CharacterAdded:Connect(function(c)
    character = c
    humPart = c:WaitForChild("HumanoidRootPart")
end)

if getgenv().antiafk then
    local vu = game:GetService("VirtualUser")
    plr.Idled:Connect(function()
        vu:CaptureController()
        vu:ClickButton2(Vector2.new())
    end)
end

if getgenv().antistealer then
    local trade = game:GetService("ReplicatedStorage"):FindFirstChild("Trade")
    if trade then
        for _, r in ipairs({"SendRequest", "AcceptTrade", "OfferItem"}) do
            trade:FindFirstChild(r):Destroy()
        end
    end
end

task.spawn(function()
    while task.wait() do
        if not humPart or not humPart.Parent then continue end
        local closest, shortest = nil, math.huge
        for _, obj in ipairs(workspace:GetDescendants()) do
            if obj:IsA("BasePart") and obj.Name == "Coin_Server" and obj:GetAttribute("CoinID") == "Candies" and not visited[obj] then
                local dist = (obj.Position - humPart.Position).Magnitude
                if dist < shortest and dist <= 250 then
                    closest = obj
                    shortest = dist
                end
            end
        end
        if closest and closest.Parent then
            visited[closest] = true
            for _, p in pairs(character:GetChildren()) do
                if p:IsA("BasePart") then p.CanCollide = false end
            end
            local duration = shortest / math.clamp(getgenv().speed, 5, 50)
            local tween = TweenService:Create(humPart, TweenInfo.new(duration, Enum.EasingStyle.Linear), {CFrame = CFrame.new(closest.Position)})
            tween:Play()
            tween.Completed:Wait()
        end
    end
end)
